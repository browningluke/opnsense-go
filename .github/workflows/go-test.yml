name: Run go tests

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  OPNSENSE_VERSION: "25.7"
  OPNSENSE_URL: "https://files.bsd.ac/opnsense-qemu/opnsense-25.7.qcow2"
  OPNSENSE_SHA1: edba9015951e68438fb6b0c0e1de21383bfaa399
  OPNSENSE_SSH_PORT: 8022
  OPNSENSE_WEB_PORT: 8443

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Create opnsense image directory
        run: |
          mkdir -p opnsense-images
      - name: Cache opnsense image
        uses: actions/cache@v4
        id: image-cache
        with:
          path: opnsense-images
          key: ${{ runner.os }}-opnsense-${{ env.OPNSENSE_SHA1 }}
      - name: Download OPNsense image
        if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          curl -L $OPNSENSE_URL -o opnsense-images/opnsense.qcow2
      - name: Verify OPNsense image
        run: |
          echo "$OPNSENSE_SHA1  opnsense-images/opnsense.qcow2" | sha1sum -c -
      - name: Disable triggers
        run: |
          mkdir -p /etc/dpkg/dpkg.cfg.d
          sudo tee /etc/dpkg/dpkg.cfg.d/01_nodoc > /dev/null << 'EOF'
          path-exclude /usr/share/doc/*
          path-exclude /usr/share/man/*
          path-exclude /usr/share/info/*
          EOF
      - name: Install qemu
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86
      - name: Start opnsense VM
        id: start-vm
        run: |
          qemu-system-x86_64 -m 6144 -smp 2 -hda opnsense-images/opnsense.qcow2 \
          -netdev user,id=user.0,hostfwd=tcp::${{ env.OPNSENSE_SSH_PORT }}-:22,hostfwd=tcp::${{ env.OPNSENSE_WEB_PORT }}-:443 \
          -device virtio-net,netdev=user.0 \
          -chardev socket,path=/tmp/qemu-isa-serial.sock,server,nowait,id=qga0 \
          -device isa-serial,chardev=qga0 \
          -device virtio-serial \
          -chardev socket,path=/tmp/qemu-virtconsole.sock,server,nowait,id=qvt0 \
          -device virtconsole,chardev=qvt0 \
          -chardev socket,path=/tmp/qemu-virtserialport.sock,server,nowait,id=qvsp0 \
          -device virtserialport,chardev=qvsp0,name=org.qemu.guest_agent.0 \
          -nographic &
          echo "qemu-pid=$!" >> $GITHUB_OUTPUT
          sleep 60 # Wait for the VM to boot
      - name: Create API key
        id: apikey
        run: |
          python3 scripts/create-apikey.py > $GITHUB_OUTPUT
      - name: Stop opnsense VM
        run: |
          kill -9 ${{ steps.start-vm.outputs.qemu-pid }}
