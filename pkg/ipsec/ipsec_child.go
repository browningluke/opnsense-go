// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var IPsecChildOpts = api.ReqOpts{
	AddEndpoint:         "/ipsec/connections/add_child",
	GetEndpoint:         "/ipsec/connections/get_child",
	UpdateEndpoint:      "/ipsec/connections/set_child",
	DeleteEndpoint:      "/ipsec/connections/del_child",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "child",
}

// Data structs

type IPsecChild struct {
	Enabled         string              `json:"enabled"`
	Connection      api.SelectedMap     `json:"connection"`
	Proposals       api.SelectedMapList `json:"esp_proposals"`
	SHA256_96       string              `json:"sha256_96"`
	StartAction     api.SelectedMap     `json:"start_action"`
	CloseAction     api.SelectedMap     `json:"close_action"`
	DPDAction       api.SelectedMap     `json:"dpd_action"`
	Mode            api.SelectedMap     `json:"mode"`
	InstallPolicies string              `json:"policies"`
	LocalNetworks   api.SelectedMapList `json:"local_ts"`
	RemoteNetworks  api.SelectedMapList `json:"remote_ts"`
	RequestID       string              `json:"reqid"`
	RekeyTime       string              `json:"rekey_time"`
	Description     string              `json:"description"`
}

// CRUD operations

func (c *Controller) AddIPsecChild(ctx context.Context, resource *IPsecChild) (string, error) {
	return api.Add(c.Client(), ctx, IPsecChildOpts, resource)
}

func (c *Controller) GetIPsecChild(ctx context.Context, id string) (*IPsecChild, error) {
	return api.Get(c.Client(), ctx, IPsecChildOpts, &IPsecChild{}, id)
}

func (c *Controller) UpdateIPsecChild(ctx context.Context, id string, resource *IPsecChild) error {
	return api.Update(c.Client(), ctx, IPsecChildOpts, resource, id)
}

func (c *Controller) DeleteIPsecChild(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, IPsecChildOpts, id)
}
