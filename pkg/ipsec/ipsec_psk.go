// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var IPsecPSKOpts = api.ReqOpts{
	AddEndpoint:         "/ipsec/pre_shared_keys/add_item",
	GetEndpoint:         "/ipsec/pre_shared_keys/get_item",
	UpdateEndpoint:      "/ipsec/pre_shared_keys/set_item",
	DeleteEndpoint:      "/ipsec/pre_shared_keys/del_item",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "preSharedKey",
}

// Data structs

type IPsecPSK struct {
	IdentityLocal  string          `json:"ident"`
	IdentityRemote string          `json:"remote_ident"`
	PreSharedKey   string          `json:"Key"`
	Type           api.SelectedMap `json:"keyType"`
	Description    string          `json:"description"`
}

// CRUD operations

func (c *Controller) AddIPsecPSK(ctx context.Context, resource *IPsecPSK) (string, error) {
	return api.Add(c.Client(), ctx, IPsecPSKOpts, resource)
}

func (c *Controller) GetIPsecPSK(ctx context.Context, id string) (*IPsecPSK, error) {
	return api.Get(c.Client(), ctx, IPsecPSKOpts, &IPsecPSK{}, id)
}

func (c *Controller) UpdateIPsecPSK(ctx context.Context, id string, resource *IPsecPSK) error {
	return api.Update(c.Client(), ctx, IPsecPSKOpts, resource, id)
}

func (c *Controller) DeleteIPsecPSK(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, IPsecPSKOpts, id)
}
