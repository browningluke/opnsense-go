// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package ipsec

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var IPsecVTIOpts = api.ReqOpts{
	AddEndpoint:         "/ipsec/vti/add",
	GetEndpoint:         "/ipsec/vti/get",
	UpdateEndpoint:      "/ipsec/vti/set",
	DeleteEndpoint:      "/ipsec/vti/del",
	ReconfigureEndpoint: ipsecReconfigureEndpoint,
	Monad:               "vti",
}

// Data structs

type IPsecVTI struct {
	Enabled         string `json:"enabled"`
	RequestID       string `json:"reqid"`
	LocalIP         string `json:"local"`
	RemoteIP        string `json:"remote"`
	TunnelLocalIP   string `json:"tunnel_local"`
	TunnelRemoteIP  string `json:"tunnel_remote"`
	TunnelLocalIP2  string `json:"tunnel_local2"`
	TunnelRemoteIP2 string `json:"tunnel_remote2"`
	Description     string `json:"description"`
}

// CRUD operations

func (c *Controller) AddIPsecVTI(ctx context.Context, resource *IPsecVTI) (string, error) {
	return api.Add(c.Client(), ctx, IPsecVTIOpts, resource)
}

func (c *Controller) GetIPsecVTI(ctx context.Context, id string) (*IPsecVTI, error) {
	return api.Get(c.Client(), ctx, IPsecVTIOpts, &IPsecVTI{}, id)
}

func (c *Controller) UpdateIPsecVTI(ctx context.Context, id string, resource *IPsecVTI) error {
	return api.Update(c.Client(), ctx, IPsecVTIOpts, resource, id)
}

func (c *Controller) DeleteIPsecVTI(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, IPsecVTIOpts, id)
}
