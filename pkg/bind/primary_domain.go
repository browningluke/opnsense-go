// Code generated by internal/generate/api/main.go; DO NOT EDIT.

package bind

import (
	"context"
	"github.com/browningluke/opnsense-go/pkg/api"
)

var PrimaryDomainOpts = api.ReqOpts{
	AddEndpoint:         "/bind/domain/add_primary_domain",
	GetEndpoint:         "/bind/domain/get_domain",
	UpdateEndpoint:      "/bind/domain/set_domain",
	DeleteEndpoint:      "/bind/domain/del_domain",
	ReconfigureEndpoint: bindReconfigureEndpoint,
	Monad:               "domain",
}

// Data structs

type PrimaryDomain struct {
	DomainName    string              `json:"domainname"`
	Enabled       string              `json:"enabled"`
	AllowTransfer api.SelectedMapList `json:"allowtransfer"`
	AllowQuery    api.SelectedMapList `json:"allowquery"`
	TimeToLive    string              `json:"ttl"`
	Refresh       string              `json:"refresh"`
	Retry         string              `json:"retry"`
	Expire        string              `json:"expire"`
	Negative      string              `json:"negative"`
	MailAdmin     string              `json:"mailadmin"`
	DnsServer     string              `json:"dnsserver"`
}

// CRUD operations

func (c *Controller) AddPrimaryDomain(ctx context.Context, resource *PrimaryDomain) (string, error) {
	return api.Add(c.Client(), ctx, PrimaryDomainOpts, resource)
}

func (c *Controller) GetPrimaryDomain(ctx context.Context, id string) (*PrimaryDomain, error) {
	return api.Get(c.Client(), ctx, PrimaryDomainOpts, &PrimaryDomain{}, id)
}

func (c *Controller) UpdatePrimaryDomain(ctx context.Context, id string, resource *PrimaryDomain) error {
	return api.Update(c.Client(), ctx, PrimaryDomainOpts, resource, id)
}

func (c *Controller) DeletePrimaryDomain(ctx context.Context, id string) error {
	return api.Delete(c.Client(), ctx, PrimaryDomainOpts, id)
}
